{"componentChunkName":"component---src-templates-post-js","path":"/adding-indexes-to-dynamodb-with-amplify/","result":{"data":{"markdownRemark":{"html":"<p>Using AWS Amplify and specifically the Amplify CLI makes it easy to create a GraphQL API backed by DynamoDB for persistance. Stepping through the CLI questions allows the CloudFormation to be generated for you and the stack to be deployed or updated easily. It will also create the necessary resolvers for AppSync and allow you to define models in the GraphQL schema which are the basis for the DynamoDB tables.</p>\n<p>An issue I ran across however was adding an index to the table using the @key directive as in the <a href=\"https://docs.amplify.aws/cli/graphql-transformer/key\">documentation</a> after the initial creation of the table. I initially created the following model for a transaction.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Transaction</span> <span class=\"token directive function\">@model</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">accountId</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">type</span><span class=\"token punctuation\">:</span> TransactionType<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">notes</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">amount</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">TransactionType</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">WITHDRAWAL</span>\n  <span class=\"token constant\">DEPOSIT</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Later I decided that it would be useful to query based on accountId and createdAt datetime. I modified the Transaction type as below and attempted to push through the Amplify CLI (<code class=\"language-text\">amplify push</code>). FYI the createdAt field is already on the auto-created DynamoDB table but you can add it to your schema if you need to retrieve the values.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Transaction</span> <span class=\"token directive function\">@model</span> \n  <span class=\"token directive function\">@key</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accountId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"createdAt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">accountId</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">type</span><span class=\"token punctuation\">:</span> TransactionType<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">notes</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">amount</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>All seemed well until the push tries to continue and the following error pops out.</p>\n<p><code class=\"language-text\">Attempting to edit the key schema of the TransactionTable table in the Transaction stack. An error occured during the push operation: Attempting to edit the key schema of the TransactionTable table in the Transaction stack.</code></p>\n<p>Unfortunately the error isn't terribly descriptive however Amplify has a useful tool that is better at checking the schema and providing more information, namely <code class=\"language-text\">amplify api gql-compile</code>. This gives us a much more informative error message.</p>\n<p><code class=\"language-text\">Attempting to edit the key schema of the TransactionTable table in the Transaction stack. Cause: Adding a primary @key directive to an existing @model. How to fix: Remove the @key directive or provide a name e.g @key(name: &quot;ByStatus&quot;, fields: [&quot;status&quot;]).</code></p>\n<p>So that's a lot more useful and informative showing that we're trying to change the existing table (and it's likely complaining as it would affect the primary partition key). So instead let's name it as the error directs us to \"ByAccountByCreatedAt\" as below. One extra property called queryField allows us to use this as a query operation and Amplify will automatically update our queries.js file if we allow it.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Transaction</span> <span class=\"token directive function\">@model</span> \n  <span class=\"token directive function\">@key</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ByAccountByCreatedAt\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accountId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"createdAt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">queryField</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"transactionsByAccountByCreatedAt\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">accountId</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">type</span><span class=\"token punctuation\">:</span> TransactionType<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">notes</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">amount</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When we try the gql-compile command again it compiles successfully and we can try to push it again to make the changes. After that's run we can look in the AWS Console and see that we now have a Global Secondary Index created based on the @key directive allowing us to query. We can test it in the AppSync console by passing in an accountId value and a createdAt condition (e.g. eq, ge, beginsWith, etc.)</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> MyQuery <span class=\"token punctuation\">{</span>\n  transactionsByAccountByCreatedAt<span class=\"token punctuation\">(</span><span class=\"token attr-name\">accountId</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"account1\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token attr-name\">ge</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2020\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    items <span class=\"token punctuation\">{</span>\n      accountId\n      amount\n      createdAt\n      id\n      notes\n      <span class=\"token keyword\">type</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"December 22, 2020","path":"/adding-indexes-to-dynamodb-with-amplify/","title":"Adding indexes to DynamoDB with AWS Amplify"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}